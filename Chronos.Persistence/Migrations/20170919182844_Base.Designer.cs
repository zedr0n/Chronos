// <auto-generated />
using Chronos.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Chronos.Persistence.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20170919182844_Base")]
    partial class Base
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Chronos.Persistence.Types.Event", b =>
                {
                    b.Property<int>("EventNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Payload");

                    b.Property<int?>("StreamHashId");

                    b.Property<Guid?>("StreamTimelineId");

                    b.Property<DateTime>("TimestampUtc");

                    b.Property<int>("Version");

                    b.HasKey("EventNumber");

                    b.HasIndex("StreamHashId", "StreamTimelineId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Chronos.Persistence.Types.Stream", b =>
                {
                    b.Property<int>("HashId");

                    b.Property<Guid>("TimelineId");

                    b.Property<int>("BranchVersion");

                    b.Property<Guid>("Key");

                    b.Property<string>("Name");

                    b.Property<string>("SourceType");

                    b.Property<int>("Version");

                    b.HasKey("HashId", "TimelineId");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("Chronos.Persistence.Types.Event", b =>
                {
                    b.HasOne("Chronos.Persistence.Types.Stream")
                        .WithMany("Events")
                        .HasForeignKey("StreamHashId", "StreamTimelineId");
                });
#pragma warning restore 612, 618
        }
    }
}
