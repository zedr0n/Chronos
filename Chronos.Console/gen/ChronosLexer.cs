//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/mbp/Dev/Chronos/Chronos.Console/Grammar/Chronos.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class ChronosLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		CREATE=1, COIN=2, TRACK=3, GUID=4, WORD=5, WHITESPACE=6, NEWLINE=7, NUMBER=8;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"C", "R", "E", "A", "T", "O", "I", "N", "K", "W", "G", "U", "D", "LOWERCASE", 
		"UPPERCASE", "DIGIT", "CREATE", "COIN", "TRACK", "GUID", "WORD", "WHITESPACE", 
		"NEWLINE", "NUMBER"
	};


	public ChronosLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ChronosLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "CREATE", "COIN", "TRACK", "GUID", "WORD", "WHITESPACE", "NEWLINE", 
		"NUMBER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Chronos.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ChronosLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\n', '\x85', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x6', '\x16', 'm', '\n', 
		'\x16', '\r', '\x16', '\xE', '\x16', 'n', '\x3', '\x17', '\x6', '\x17', 
		'r', '\n', '\x17', '\r', '\x17', '\xE', '\x17', 's', '\x3', '\x17', '\x3', 
		'\x17', '\x3', '\x18', '\x5', '\x18', 'y', '\n', '\x18', '\x3', '\x18', 
		'\x3', '\x18', '\x6', '\x18', '}', '\n', '\x18', '\r', '\x18', '\xE', 
		'\x18', '~', '\x3', '\x19', '\x6', '\x19', '\x82', '\n', '\x19', '\r', 
		'\x19', '\xE', '\x19', '\x83', '\x2', '\x2', '\x1A', '\x3', '\x2', '\x5', 
		'\x2', '\a', '\x2', '\t', '\x2', '\v', '\x2', '\r', '\x2', '\xF', '\x2', 
		'\x11', '\x2', '\x13', '\x2', '\x15', '\x2', '\x17', '\x2', '\x19', '\x2', 
		'\x1B', '\x2', '\x1D', '\x2', '\x1F', '\x2', '!', '\x2', '#', '\x3', '%', 
		'\x4', '\'', '\x5', ')', '\x6', '+', '\a', '-', '\b', '/', '\t', '\x31', 
		'\n', '\x3', '\x2', '\x13', '\x4', '\x2', '\x45', '\x45', '\x65', '\x65', 
		'\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', 
		'\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', 'V', 'V', 'v', 'v', 
		'\x4', '\x2', 'Q', 'Q', 'q', 'q', '\x4', '\x2', 'K', 'K', 'k', 'k', '\x4', 
		'\x2', 'P', 'P', 'p', 'p', '\x4', '\x2', 'M', 'M', 'm', 'm', '\x4', '\x2', 
		'Y', 'Y', 'y', 'y', '\x4', '\x2', 'I', 'I', 'i', 'i', '\x4', '\x2', 'W', 
		'W', 'w', 'w', '\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x3', '\x2', 
		'\x63', '|', '\x3', '\x2', '\x43', '\\', '\x3', '\x2', '\x32', ';', '\x4', 
		'\x2', '\v', '\v', '\"', '\"', '\x2', '{', '\x2', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', 
		'\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x33', '\x3', '\x2', '\x2', '\x2', '\x5', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x37', '\x3', '\x2', '\x2', '\x2', '\t', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\v', ';', '\x3', '\x2', '\x2', '\x2', '\r', 
		'=', '\x3', '\x2', '\x2', '\x2', '\xF', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x41', '\x3', '\x2', '\x2', '\x2', '\x13', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\x15', '\x45', '\x3', '\x2', '\x2', '\x2', '\x17', 'G', 
		'\x3', '\x2', '\x2', '\x2', '\x19', 'I', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'K', '\x3', '\x2', '\x2', '\x2', '\x1D', 'M', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', 'O', '\x3', '\x2', '\x2', '\x2', '!', 'Q', '\x3', '\x2', '\x2', 
		'\x2', '#', 'S', '\x3', '\x2', '\x2', '\x2', '%', 'Z', '\x3', '\x2', '\x2', 
		'\x2', '\'', '_', '\x3', '\x2', '\x2', '\x2', ')', '\x65', '\x3', '\x2', 
		'\x2', '\x2', '+', 'l', '\x3', '\x2', '\x2', '\x2', '-', 'q', '\x3', '\x2', 
		'\x2', '\x2', '/', '|', '\x3', '\x2', '\x2', '\x2', '\x31', '\x81', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\x34', '\t', '\x2', '\x2', '\x2', '\x34', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\t', '\x3', '\x2', 
		'\x2', '\x36', '\x6', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\t', 
		'\x4', '\x2', '\x2', '\x38', '\b', '\x3', '\x2', '\x2', '\x2', '\x39', 
		':', '\t', '\x5', '\x2', '\x2', ':', '\n', '\x3', '\x2', '\x2', '\x2', 
		';', '<', '\t', '\x6', '\x2', '\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\t', '\a', '\x2', '\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'?', '@', '\t', '\b', '\x2', '\x2', '@', '\x10', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\x42', '\t', '\t', '\x2', '\x2', '\x42', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x44', '\t', '\n', '\x2', '\x2', '\x44', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\t', '\v', '\x2', 
		'\x2', '\x46', '\x16', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\t', '\f', 
		'\x2', '\x2', 'H', '\x18', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\t', 
		'\r', '\x2', '\x2', 'J', '\x1A', '\x3', '\x2', '\x2', '\x2', 'K', 'L', 
		'\t', '\xE', '\x2', '\x2', 'L', '\x1C', '\x3', '\x2', '\x2', '\x2', 'M', 
		'N', '\t', '\xF', '\x2', '\x2', 'N', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'O', 'P', '\t', '\x10', '\x2', '\x2', 'P', ' ', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\t', '\x11', '\x2', '\x2', 'R', '\"', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\x5', '\x3', '\x2', '\x2', 'T', 'U', '\x5', '\x5', '\x3', 
		'\x2', 'U', 'V', '\x5', '\a', '\x4', '\x2', 'V', 'W', '\x5', '\t', '\x5', 
		'\x2', 'W', 'X', '\x5', '\v', '\x6', '\x2', 'X', 'Y', '\x5', '\a', '\x4', 
		'\x2', 'Y', '$', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\x5', '\x3', '\x2', 
		'\x2', '[', '\\', '\x5', '\r', '\a', '\x2', '\\', ']', '\x5', '\xF', '\b', 
		'\x2', ']', '^', '\x5', '\x11', '\t', '\x2', '^', '&', '\x3', '\x2', '\x2', 
		'\x2', '_', '`', '\x5', '\v', '\x6', '\x2', '`', '\x61', '\x5', '\x5', 
		'\x3', '\x2', '\x61', '\x62', '\x5', '\t', '\x5', '\x2', '\x62', '\x63', 
		'\x5', '\x3', '\x2', '\x2', '\x63', '\x64', '\x5', '\x13', '\n', '\x2', 
		'\x64', '(', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\x5', '\x17', 
		'\f', '\x2', '\x66', 'g', '\x5', '\x19', '\r', '\x2', 'g', 'h', '\x5', 
		'\xF', '\b', '\x2', 'h', 'i', '\x5', '\x1B', '\xE', '\x2', 'i', '*', '\x3', 
		'\x2', '\x2', '\x2', 'j', 'm', '\x5', '\x1D', '\xF', '\x2', 'k', 'm', 
		'\x5', '\x1F', '\x10', '\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 'l', 
		'k', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\x3', '\x2', '\x2', '\x2', 
		'n', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\x3', '\x2', '\x2', '\x2', 
		'o', ',', '\x3', '\x2', '\x2', '\x2', 'p', 'r', '\t', '\x12', '\x2', '\x2', 
		'q', 'p', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\x3', '\x2', '\x2', '\x2', 
		's', 'q', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 
		't', 'u', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\b', '\x17', '\x2', '\x2', 
		'v', '.', '\x3', '\x2', '\x2', '\x2', 'w', 'y', '\a', '\xF', '\x2', '\x2', 
		'x', 'w', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', '\x2', '\x2', '\x2', 
		'y', 'z', '\x3', '\x2', '\x2', '\x2', 'z', '}', '\a', '\f', '\x2', '\x2', 
		'{', '}', '\a', '\xF', '\x2', '\x2', '|', 'x', '\x3', '\x2', '\x2', '\x2', 
		'|', '{', '\x3', '\x2', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', 
		'~', '|', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\x3', '\x2', '\x2', 
		'\x2', '\x7F', '\x30', '\x3', '\x2', '\x2', '\x2', '\x80', '\x82', '\x5', 
		'!', '\x11', '\x2', '\x81', '\x80', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x83', '\x3', '\x2', '\x2', '\x2', '\x83', '\x81', '\x3', '\x2', '\x2', 
		'\x2', '\x83', '\x84', '\x3', '\x2', '\x2', '\x2', '\x84', '\x32', '\x3', 
		'\x2', '\x2', '\x2', '\n', '\x2', 'l', 'n', 's', 'x', '|', '~', '\x83', 
		'\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
